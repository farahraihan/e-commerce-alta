// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MidtransInterface is an autogenerated mock type for the MidtransInterface type
type MidtransInterface struct {
	mock.Mock
}

// RequestPayment provides a mock function with given fields: orderId, amount
func (_m *MidtransInterface) RequestPayment(orderId string, amount int) (string, error) {
	ret := _m.Called(orderId, amount)

	if len(ret) == 0 {
		panic("no return value specified for RequestPayment")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, int) (string, error)); ok {
		return rf(orderId, amount)
	}
	if rf, ok := ret.Get(0).(func(string, int) string); ok {
		r0 = rf(orderId, amount)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, int) error); ok {
		r1 = rf(orderId, amount)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMidtransInterface creates a new instance of MidtransInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMidtransInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MidtransInterface {
	mock := &MidtransInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
